#!/usr/bin/env ruby -w
# encoding: UTF-8
需要类 'C时空代理对象'
class C场代理对象 < C时空代理对象
  
  初始化执行 do
    @连接对象数组 = []
    刷新连接对象
  end
  
  def 刷新连接对象#范围变动后调用,寻找能够接收的对象进行连接
    相交对象数组 = @所在区域.每个相交体(范围).找出全部{|对象| 对象.响应?(:接收)}.数组化
    相交对象数组.差异对象组(@连接对象数组).每对{|对象, 是否相交| 是否相交 ? 连接(对象) : 断开连接(对象)}
  end
  def 连接(对象);添加连接对象(对象); 对象.添加连接场(self) end
  def 断开连接(对象);删除连接对象(对象); 对象.删除连接场(self) end
  def 断开所有连接
    @连接对象数组.每个{|对象| 对象.删除连接场(self)}
    @连接对象数组 = []
  end
  def 添加连接对象(对象);@连接对象数组 << 对象 end
  def 删除连接对象(对象);@连接对象数组.删除(对象) end
  def 传递(信能);@连接对象数组.每个{|连接对象| 连接对象.接收(信能)} end
  def 移动(事件)
    super(事件)
    刷新连接对象
  end
  def 形变(事件)
    super(事件)
    刷新连接对象
  end
  def 销毁(事件)
    super(事件)
    断开所有连接
  end
  def 种类;:场 end
end
